---
- hosts: validator
  become: yes
  vars_files:
    - "~/.vault.yaml"
    
  tasks:
    - name: "ensure group exists & is correct ID"
      ansible.builtin.group:
       name: "{{ my_user }}"
       state: present
       gid: "{{ my_id }}"

    - name: "ensure user exists & set password"
      ansible.builtin.user:
       comment: "Created by Ansible"
       name: "{{ my_user }}"
       password: "{{my_password | password_hash('sha512')}}"
       uid: "{{ my_id }}"
       groups: "{{ my_user }},sudo"
       append: yes
       shell: /bin/bash

    - name: "install user ssh key"
      ansible.posix.authorized_key:
        user: "{{ my_user }}"
        state: present
        exclusive: yes
        key: "{{ lookup('file', '~/.ssh/{{my_user}}.pub') }}"

    - name: "set root password"
      ansible.builtin.user:
       name: "root"
       password: "{{root_password | password_hash('sha512')}}"

    - name: "add custom sudoers file"
      ansible.builtin.template:
        src: "./files/custom-sudoers.j2"
        dest: "/etc/sudoers.d/custom-sudoers"
        owner: "root"
        group: "root"
        mode: 0640
        validate: /usr/sbin/visudo -cf %s

    - name: "copy over sshd_config file"
      ansible.builtin.template:
        src: "./files/sshd_config.j2"
        dest: "/etc/ssh/sshd_config"
        backup: yes
        owner: "root"
        group: "root"
        mode: 0644
        validate: /usr/sbin/sshd -T -f %s
      notify:
      - restart sshd

    - name: "ensure ufw is installed"
      ansible.builtin.apt:
        update_cache: yes
        name: 'ufw'
        state: latest

    - name: "firewall - allow ssh"
      community.general.ufw:
        rule: allow
        direction: in
        port: {{ ssh_port }}
        proto: tcp

    - name: "firewall - block icomming connections by default"
      community.general.ufw:
        direction: incoming
        policy: deny

    - name: "firewall - ensure ufw is enabled"
      community.general.ufw:
        state: enabled

    - name: "ensure fail2ban is installed"
      ansible.builtin.apt:
        update_cache: yes
        name: fail2ban
        state: latest

    - name: "copying over fail2ban config"
      ansible.builtin.template:
         src: "./files/jail.local.j2"
         dest: "/etc/fail2ban/jail.local"
         owner: "root"
         group: "root"
         mode: 0644
      notify:
      - restart fail2ban

    - name: "ensure fail2ban is started and starts on boot"
      ansible.builtin.systemd:
        name: fail2ban
        state: started
        enabled: yes

    - name: "ensure docker dependancies are installed"
      ansible.builtin.apt:
        update_cache: yes
        name: ['apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common']
        state: latest

    - name: "ensure Docker GPG key has been added"
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/{{ansible_distribution | lower}}/gpg
        state: present

    - name: "ensure Docker repository has been added"
      ansible.builtin.apt_repository:
        filename: "docker-repo"
        repo: deb https://download.docker.com/linux/{{ansible_distribution | lower}} {{ansible_distribution_release}} stable
        state: present

    - name: "ensure Docker is installed"
      ansible.builtin.apt:
        update_cache: yes
        name: ['docker-ce', 'docker-ce-cli', 'containerd.io', 'docker-compose']
        state: latest

    - name: "copying over validator compose file"
      ansible.builtin.template:
        src: "./files/docker-compose.yml.j2"
        dest: "/opt/docker-compose.yml"
        owner: "ansible"
        group: "ansible"
        mode: 0600

    - name: "pulling validator image and ensuring container is started"
      shell: "cd /opt/ && docker-compose pull && docker-compose up -d"
      register: shell_output

    - name: Result of docker-compose run
      debug:
        var: shell_output.stderr_lines

  handlers:

    - name: "restarting1 fail2ban"
      ansible.builtin.service:
        name: fail2ban
        state: restarted

    - name: "restarting sshd"
      ansible.builtin.service:
        name: sshd
        state: restarted
